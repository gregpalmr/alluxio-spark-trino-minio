version: '3.9' 

services:

  alluxio-master:
    image: docker.io/alluxio/alluxio:2.9.3
    user: root
    hostname: alluxio-master
    container_name: alluxio-master
    networks:
      custom:
        ipv4_address: 172.34.0.2
    depends_on:
      - minio-create-buckets
    volumes:
      - alluxio-data:/opt/alluxio/underFSStorage
      - ./config-files:/tmp/config-files:ro
    expose:
      - 19998
      - 19999
      - 19200
    ports:
      - 19998:19998
      - 19999:19999
    entrypoint: >
      /bin/sh -c "
        cp /tmp/config-files/alluxio/conf/alluxio-site.properties /opt/alluxio/conf/alluxio-site.properties
        myhostname=`hostname`
        sed -i \"s/THIS_HOSTNAME/$$myhostname/g\" /opt/alluxio/conf/alluxio-site.properties
        sed -i \"s/=INFO/=DEBUG/g\" /opt/alluxio/conf/log4j.properties
        chmod 744 /opt/alluxio/conf/*
        /entrypoint.sh master
        sleep infinity
        "

  alluxio-worker:
    image: docker.io/alluxio/alluxio:2.9.3
    user: root
    hostname: alluxio-worker1
    container_name: alluxio-worker1
    networks:
      custom:
        ipv4_address: 172.34.0.3
    shm_size: '1gb'
    depends_on:
      - alluxio-master
    environment:
      ALLUXIO_JAVA_OPTS: "-Dalluxio.master.hostname=alluxio-master -Dalluxio.worker.ramdisk.size=1G -Dalluxio.master.mount.table.root.ufs=/opt/alluxio/underFSStorage -Dalluxio.worker.hostname=alluxio-worker"
    volumes:
      - alluxio-data:/opt/alluxio/underFSStorage
      - ./config-files:/tmp/config-files:ro
    expose:
      - 29999
      - 30000
      - 30001
      - 30003
      - 39999
    ports:
      - 29999:29999
      - 30000:30000
      - 39999:39999
    entrypoint: >
      /bin/sh -c "
        cp /tmp/config-files/alluxio/conf/alluxio-site.properties /opt/alluxio/conf/alluxio-site.properties
        myhostname=`hostname`
        sed -i \"s/THIS_HOSTNAME/$$myhostname/g\" /opt/alluxio/conf/alluxio-site.properties
        sed -i \"s/=INFO/=DEBUG/g\" /opt/alluxio/conf/log4j.properties
        chmod 744 /opt/alluxio/conf/*
        /entrypoint.sh worker
        sleep infinity
        "

  alluxio-mount-minio-bucket:
    image: docker.io/alluxio/alluxio:2.9.3
    user: root
    container_name: alluxio-mount-minio-bucket
    networks:
      custom:
        ipv4_address: 172.34.0.11
    depends_on:
      - alluxio-master
      - minio-create-buckets
    volumes:
      - alluxio-data:/opt/alluxio/underFSStorage
      - ./config-files:/tmp/config-files:ro
    entrypoint: >
      /bin/sh -c "
        cp /tmp/config-files/alluxio/conf/alluxio-site.properties /opt/alluxio/conf/alluxio-site.properties
        myhostname=`hostname`
        sed -i "s/THIS_HOSTNAME/$$myhostname/g" /opt/alluxio/conf/alluxio-site.properties
        sed -i "s/=INFO/=DEBUG/g" /opt/alluxio/conf/log4j.properties
        chmod 744 /opt/alluxio/conf/*
        sleep 5
        alluxio fs mount --option alluxio.underfs.s3.endpoint=http://minio:9000 --option alluxio.underfs.s3.disable.dns.buckets=true --option alluxio.underfs.s3.inherit.acl=false --option s3a.accessKeyId=minio  --option s3a.secretKey=minio123 /user s3a://minio-bucket-1/user/
        sleep 10
        alluxio fs loadMetadata -R /
        alluxio fs chmod -R 777 /user/
        exit 0
        "

  trino-coordinator:
    image: docker.io/trinodb/trino:431
    hostname: trino-coordinator
    container_name: trino-coordinator
    networks:
      custom:
        ipv4_address: 172.34.0.5
    ports:
      - '8080:8080'
    volumes:
      - trino-data:/data
      - ./config-files:/tmp/config-files:ro
      - ./local-files:/tmp/local-files
    command:
      - /bin/bash
      - -c 
      - |
        find /usr/lib/trino -name alluxio*shaded* -exec rm {} \;
        cp /tmp/local-files/alluxio-*-client.jar /usr/lib/trino/plugin/hive/
        cp /tmp/local-files/alluxio-*-client.jar /usr/lib/trino/plugin/hudi/
        cp /tmp/local-files/alluxio-*-client.jar /usr/lib/trino/plugin/iceberg/
        cp /tmp/local-files/alluxio-*-client.jar /usr/lib/trino/plugin/delta-lake/
        cp -R /tmp/config-files/trino/etc/* /etc/trino/
        cp /tmp/config-files/alluxio/conf/core-site.xml /etc/trino/
        mkdir -p /home/trino && chown trino:trino /home/trino
        /usr/lib/trino/bin/run-trino


  minio:
    image: docker.io/minio/minio:latest
    hostname: minio
    container_name: minio
    networks:
      custom:
        ipv4_address: 172.34.0.7
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - minio-data:/data
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
    command: server --console-address ":9001" /data

  minio-create-buckets:
    image: docker.io/minio/mc:latest
    container_name: minio-create-buckets
    networks:
      custom:
        ipv4_address: 172.34.0.10
    depends_on:
      - minio
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      /usr/bin/mc config host add myminio http://minio:9000 minio minio123;
      if [ \"`/usr/bin/mc ls myminio`\" == \"\" ]; then 
         echo \"Creating bucket myminio/minio-bucket-1\" && \
         /usr/bin/mc mb myminio/minio-bucket-1 && \
         /usr/bin/mc policy download myminio/minio-bucket-1 && \
         /usr/bin/mc cp /etc/motd myminio/minio-bucket-1/user/hive/warehouse/.temp_file; 
      else 
         echo \"Bucket myminio/hive already exists, skipping create\"; 
      fi;
      exit 0
      "

  spark-master:
    image: docker.io/bitnami/spark:3.3
    hostname: spark-master
    container_name: spark-master
    networks:
      custom:
        ipv4_address: 172.34.0.8
    volumes:
      - ./local-files:/tmp/local-files
      - ./config-files:/tmp/config-files:ro
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    ports:
      - 8081:8080
    command:
      - /bin/sh
      - -c 
      - |
        cp /tmp/local-files/alluxio-*-client.jar /opt/bitnami/spark/jars/
        cp /tmp/config-files/spark/conf/hive-site.xml /opt/bitnami/spark/conf/hive-site.xml
        cp /tmp/config-files/spark/conf/spark-defaults.conf /opt/bitnami/spark/conf/spark-defaults.conf
        cp /tmp/config-files/alluxio/conf/core-site.xml /opt/bitnami/spark/conf/core-site.xml
        /opt/bitnami/scripts/spark/run.sh

  spark-worker:
    image: docker.io/bitnami/spark:3.3
    hostname: spark-worker
    container_name: spark-worker
    networks:
      custom:
        ipv4_address: 172.34.0.9
    volumes:
      - ./local-files:/tmp/local-files
      - ./config-files:/tmp/config-files:ro
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    command:
      - /bin/sh
      - -c 
      - |
        cp /tmp/local-files/alluxio-*-client.jar /opt/bitnami/spark/jars/
        cp /tmp/config-files/spark/conf/hive-site.xml /opt/bitnami/spark/conf/hive-site.xml
        cp /tmp/config-files/spark/conf/spark-defaults.conf /opt/bitnami/spark/conf/spark-defaults.conf
        cp /tmp/config-files/alluxio/conf/core-site.xml /opt/bitnami/spark/conf/core-site.xml
        /opt/bitnami/scripts/spark/run.sh
    ports:
      - 8082:8081

  hive-metastore:
    image: docker.io/sslhep/hive-metastore:3.1.3
    hostname: hive-metastore
    container_name: hive-metastore
    user: root
    networks:
      custom:
        ipv4_address: 172.34.0.12
    environment:
      - SERVICE_NAME=metastore
    expose:
      - 9083
    ports:
      - 9083:9083
    volumes:
      - ./config-files:/tmp/config-files:ro
      - ./local-files:/tmp/local-files:ro
      - hive-metastore-data:/data
    entrypoint: >
      /bin/sh -c "
        set -x;
        cp /tmp/local-files/alluxio-*-client.jar /opt/hive/lib/
        cp /tmp/config-files/hive-metastore/conf/metastore-site.xml /opt/hive/conf/metastore-site.xml
        cp /tmp/config-files/alluxio/conf/core-site.xml /opt/hive/conf/core-site.xml
        /opt/hive/bin/schematool -initSchema -dbType derby -url 'jdbc:derby:;databaseName=/data/metastore_db;create=true'
        exec /opt/hive/bin/hive --skiphadoopversion --skiphbasecp --service metastore
        sleep infinity
        "

volumes:
  hive-metastore-data:
    driver: local
  minio-data:
    driver: local
  alluxio-data:
    driver: local
  trino-data:
    driver: local

networks:
  custom:
    driver: bridge
    ipam:
      driver: default
      config:
      - subnet: 172.34.0.0/16
        gateway: 172.34.0.1
